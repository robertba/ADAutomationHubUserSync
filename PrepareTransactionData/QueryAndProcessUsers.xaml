<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/activedirectorydomainservices" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sds="clr-namespace:System.Data.SQLite;assembly=System.Data.SQLite" xmlns:uas="clr-namespace:UiPath.ActiveDirectoryDomainServices.Service;assembly=UiPath.ActiveDirectoryDomainServices" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_lstCRUD" Type="OutArgument(scg:List(scg:List(scg:Dictionary(x:String, x:String))))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1193.6,4631.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="27">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Net</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Data.SQLite</x:String>
      <x:String>System.Data.Common</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="38">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Data.SQLite</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="AD Query, Comp with Database" sap:VirtualizedContainerService.HintSize="1173.6,4491.2" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictADUser" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="lstUsersToCreate" />
      <Variable x:TypeArguments="x:String" Name="sDN" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="oUserProps" />
      <Variable x:TypeArguments="x:String" Name="sConnString" />
      <Variable x:TypeArguments="x:Int32" Name="nRunNumber" />
      <Variable x:TypeArguments="x:Int32" Name="nRecordsUpdated" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="lstUsersToUpdate" />
      <Variable x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" Name="lstUsersToDelete" />
      <Variable x:TypeArguments="x:Boolean" Name="bUsersSame" />
      <Variable x:TypeArguments="s:String[]" Name="listUsers" />
      <Variable x:TypeArguments="x:Boolean" Name="bUserFoundInDB" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="1132,60" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[sConnString]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[String.concat("URI=file:", Path.Combine(Environment.CurrentDirectory, "Data\users.db") )]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetRunNumber workflow" sap:VirtualizedContainerService.HintSize="1132,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DBFunctions\GetRunNumber.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="x:Int32" x:Key="RunNumber">[nRunNumber]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1132,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Run Number: &quot; + nRunNumber.ToString]" />
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SetRunNumber workflow" sap:VirtualizedContainerService.HintSize="1132,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="DBFunctions\SetRunNumber.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="RunNumber">[nRunNumber + 1]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
        <OutArgument x:TypeArguments="x:Int32" x:Key="RecordsUpdated">[nRecordsUpdated]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <If Condition="[nRecordsUpdated &lt;&gt; 1]" DisplayName="If can't update run number exit" sap:VirtualizedContainerService.HintSize="1132,52.8" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[&quot;Couldn't update the run number.&quot;]" />
          <Throw Exception="[new System.Exception(&quot;Couldn't update the run number.&quot;)]" sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Throw_1" />
        </Sequence>
      </If.Then>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1132,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Updated run number in database: &quot; + (nRunNumber + 1).ToString]" />
    <Sequence DisplayName="Init Lists" sap:VirtualizedContainerService.HintSize="1132,68.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:List(scg:Dictionary(x:String, x:String)))">[out_lstCRUD]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:List(scg:Dictionary(x:String, x:String)))">[new List(Of List(Of Dictionary(Of String, String)))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Initialize create user data structure" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToCreate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[new List(Of Dictionary(Of String, String))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Initialize Update user data structure" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToUpdate]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[new List(Of Dictionary(Of String, String))]</InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Initialize Delete user data structure" sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
        <Assign.To>
          <OutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToDelete]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[new List(Of Dictionary(Of String, String))]</InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <p:ActiveDirectoryScope ActiveDirectoryServer="{x:Null}" Password="{x:Null}" Username="{x:Null}" DisplayName="Active Directory Scope" sap:VirtualizedContainerService.HintSize="1132,2700.8" sap2010:WorkflowViewState.IdRef="ActiveDirectoryScope_1">
      <p:ActiveDirectoryScope.Body>
        <ActivityAction x:TypeArguments="uas:ActiveDirectoryService">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="uas:ActiveDirectoryService" Name="ActiveDirectoryScopeConnectionName" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1098.4,2614.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1056.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Querying AD using &quot; + in_config(&quot;LDAPFilter&quot;).ToString + &quot; at location: &quot; + in_config(&quot;ADLocation&quot;).ToString]" />
            <p:GetObjectsByLDAPFilter DisplayName="AD Get Users by LDAP Filter" sap:VirtualizedContainerService.HintSize="1056.8,22.4" sap2010:WorkflowViewState.IdRef="GetObjectsByLDAPFilter_1" LDAPFilter="[in_config(&quot;LDAPFilter&quot;).ToString]" Location="[in_config(&quot;ADLocation&quot;).ToString]" Objects="[listUsers]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1056.8,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Found &quot; + listUsers.Count.ToString + &quot; user(s) in AD.&quot;]" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="1056.8,2193.6" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listUsers]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="1021.6,2059.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sds:SQLiteConnection" Name="oConnection" />
                      <Variable x:TypeArguments="sd:DataTable" Name="oQueryResult" />
                      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictDBUser" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:GetObjectProperties SingleProperty="{x:Null}" SinglePropertyValue="{x:Null}" AllProperties="[oUserProps]" DisplayName="AD Get User Details" DistinguishedName="[item]" sap:VirtualizedContainerService.HintSize="980,22.4" sap2010:WorkflowViewState.IdRef="GetObjectProperties_1" />
                    <Assign DisplayName="Init dictionary to hold the user from AD" sap:VirtualizedContainerService.HintSize="980,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign DN - used to get biz unit" sap:VirtualizedContainerService.HintSize="980,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[sDN]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("distinguishedname"),  oUserProps("distinguishedname").ToString,"")]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="980,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="[&quot;Found AD user with DN: &quot; + sDN]" />
                    <If Condition="[NOT oUserProps.ContainsKey(&quot;mail&quot;)]" DisplayName="Skip users without email addresses" sap:VirtualizedContainerService.HintSize="980,52.8" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,248" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Skipped user with DN: &quot; + sDN + &quot; : no email address&quot;]" />
                          <ui:Continue sap:VirtualizedContainerService.HintSize="333.6,22.4" sap2010:WorkflowViewState.IdRef="Continue_1" />
                        </Sequence>
                      </If.Then>
                    </If>
                    <Sequence DisplayName="User from AD into Dict" sap:VirtualizedContainerService.HintSize="980,68.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <InvokeMethod DisplayName="Email to DIctionary" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_email</InArgument>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("mail"),  oUserProps("mail").ToString,"")]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="First Name to DIctionary" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_5" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_first_name</InArgument>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("givenname"),  oUserProps("givenname").ToString,"")]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="Last Name to DIctionary" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_6" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_last_name</InArgument>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("sn"),  oUserProps("sn").ToString,"")]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="Location to DIctionary" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_7" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_location</InArgument>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("physicaldeliveryofficename"),  oUserProps("physicaldeliveryofficename").ToString,"")]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="Department to DIctionary" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_8" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_department</InArgument>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("department"),  oUserProps("department").ToString,"")]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="BU to DIctionary" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_9" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_business_unit</InArgument>
                        <InArgument x:TypeArguments="x:String">[sDN.Substring(sDN.IndexOf("OU=") + 3, sDN.IndexOf(",",sDN.IndexOf("OU=")) - (sDN.IndexOf("OU=")) - 3 )]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="Job Title" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_10" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">user_job_title</InArgument>
                        <InArgument x:TypeArguments="x:String" xml:space="preserve">[If (oUserProps.ContainsKey("title"),  oUserProps("title").ToString,"")]</InArgument>
                      </InvokeMethod>
                      <InvokeMethod DisplayName="Run Number" sap:VirtualizedContainerService.HintSize="236.8,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_11" MethodName="Add">
                        <InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                        </InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="x:String">seen_in_run</InArgument>
                        <InArgument x:TypeArguments="x:String">[(nRunNumber + 1).ToString]</InArgument>
                      </InvokeMethod>
                    </Sequence>
                    <Assign DisplayName="Init dictionary to hold DB user" sap:VirtualizedContainerService.HintSize="980,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictDBUser]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(Of String, String)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Try to get user from DB" sap:VirtualizedContainerService.HintSize="980,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="DBFunctions\GetUser.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <OutArgument x:TypeArguments="x:Boolean" x:Key="Found">[bUserFoundInDB]</OutArgument>
                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="User">[dictDBUser]</InOutArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="RunNumber">[nRunNumber]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="UserEmail">[dictADUser("user_email")]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <If Condition="[bUserFoundInDB]" DisplayName="user found in DB?" sap:VirtualizedContainerService.HintSize="980,1141.6" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="560.8,992" sap2010:WorkflowViewState.IdRef="Sequence_8">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="519.2,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Found matching user in database with email: &quot; + dictDBUser(&quot;user_email&quot;) + &quot;.   Updating their run number to &quot; + (nRunNumber+1).ToString]" />
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Update the user run # in the DB" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="DBFunctions\UpdateUserRunNumber.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:Int32" x:Key="RunNumber">[nRunNumber + 1]</InArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="RecordsUpdated">[nRecordsUpdated]</OutArgument>
                              <InArgument x:TypeArguments="x:String" x:Key="UserEmail">[dictADUser("user_email")]</InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Compare AD user with DB user" sap:VirtualizedContainerService.HintSize="519.2,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="PrepareTransactionData\CompareUsers.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="User1">[dictADUser]</InArgument>
                              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="User2">[dictDBUser]</InArgument>
                              <OutArgument x:TypeArguments="x:Boolean" x:Key="Match">[bUsersSame]</OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <If Condition="[Not bUsersSame]" DisplayName="If users differ, add to update list" sap:VirtualizedContainerService.HintSize="519.2,510.4" sap2010:WorkflowViewState.IdRef="If_3">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="375.2,360.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;User with email: &quot; + dictDBUser(&quot;user_email&quot;) + &quot; differed in the DB from AD.  Adding them to update list.&quot;]" />
                                <InvokeMethod DisplayName="Add user from AD to update list" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_12" MethodName="Add">
                                  <InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToUpdate]</InArgument>
                                  </InvokeMethod.TargetObject>
                                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                                </InvokeMethod>
                              </Sequence>
                            </If.Then>
                          </If>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="375.2,360.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="333.6,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;AD user with email: &quot; + dictADUser(&quot;user_email&quot;) + &quot; not found in DB.  Adding them to create list.&quot;]" />
                          <InvokeMethod DisplayName="Add user from AD to create list" sap:VirtualizedContainerService.HintSize="333.6,135.2" sap2010:WorkflowViewState.IdRef="InvokeMethod_3" MethodName="Add">
                            <InvokeMethod.TargetObject>
                              <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToCreate]</InArgument>
                            </InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[dictADUser]</InArgument>
                          </InvokeMethod>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </p:ActiveDirectoryScope.Body>
    </p:ActiveDirectoryScope>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Get Users to be Deleted" sap:VirtualizedContainerService.HintSize="1132,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="DBFunctions\GetUsersByRunNumber.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Int32" x:Key="RunNumber">[nRunNumber]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
        <InOutArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))" x:Key="Users">[lstUsersToDelete]</InOutArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1132,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Found &quot; + lstUsersToDelete.Count.ToString + &quot; user(s) to delete.&quot;]" />
    <InvokeMethod DisplayName="Add Create List" sap:VirtualizedContainerService.HintSize="1132,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_13" MethodName="Add">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(scg:List(scg:Dictionary(x:String, x:String)))">[out_lstCRUD]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToCreate]</InArgument>
    </InvokeMethod>
    <InvokeMethod DisplayName="Add Update List" sap:VirtualizedContainerService.HintSize="1132,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_14" MethodName="Add">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(scg:List(scg:Dictionary(x:String, x:String)))">[out_lstCRUD]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToUpdate]</InArgument>
    </InvokeMethod>
    <InvokeMethod DisplayName="Add Delete List" sap:VirtualizedContainerService.HintSize="808,133.6" sap2010:WorkflowViewState.IdRef="InvokeMethod_15" MethodName="Add">
      <InvokeMethod.TargetObject>
        <InArgument x:TypeArguments="scg:List(scg:List(scg:Dictionary(x:String, x:String)))">[out_lstCRUD]</InArgument>
      </InvokeMethod.TargetObject>
      <InArgument x:TypeArguments="scg:List(scg:Dictionary(x:String, x:String))">[lstUsersToDelete]</InArgument>
    </InvokeMethod>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="808,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="241.6,331.2" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="scg:Dictionary(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="Debugging:  insert all users who need to be created" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[lstUsersToCreate]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:String)">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke AddUser workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="DBFunctions\AddUser.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="RecordsUpdated">[nRecordsUpdated]</OutArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="User">[item]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="scg:Dictionary(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="Debugging:  update all users who need to be updated" sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[lstUsersToUpdate]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:String)">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke UpdateUser workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="DBFunctions\UpdateUser.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="RecordsUpdated">[nRecordsUpdated]</OutArgument>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="User">[item]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
          <ui:ForEach x:TypeArguments="scg:Dictionary(x:String, x:String)" CurrentIndex="{x:Null}" DisplayName="Debugging:  delete all users who need to be deleted " sap:VirtualizedContainerService.HintSize="200,52.8" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[lstUsersToDelete]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="scg:Dictionary(x:String, x:String)">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="item" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,180.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke DeleteUser workflow" sap:VirtualizedContainerService.HintSize="333.6,88" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="DBFunctions\DeleteUser.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ConnString">[sConnString]</InArgument>
                      <OutArgument x:TypeArguments="x:Int32" x:Key="RecordsUpdated">[nRecordsUpdated]</OutArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="UserEmail">[item("user_email")]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>